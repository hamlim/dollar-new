{"dependencies":[{"name":"./constants","loc":{"line":19,"column":27}},{"name":"./object","loc":{"line":20,"column":24}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeNormalUrl = makeNormalUrl;\nexports.makeDownloadUrl = makeDownloadUrl;\nexports.makeUploadUrl = makeUploadUrl;\nexports.makeQueryString = makeQueryString;\n\nvar _constants = require(\"./constants\");\n\nvar constants = _interopRequireWildcard(_constants);\n\nvar _object = require(\"./object\");\n\nvar object = _interopRequireWildcard(_object);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nfunction makeNormalUrl(urlPart) {\n  return constants.domainBase + constants.apiBaseUrl + urlPart;\n}\nfunction makeDownloadUrl(urlPart) {\n  return constants.downloadBase + constants.apiBaseUrl + urlPart;\n}\nfunction makeUploadUrl(urlPart) {\n  return constants.domainBase + constants.apiUploadBaseUrl + urlPart;\n}\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n  object.forEach(params, function (key, val) {\n    var nextPart = encode(key) + '=' + encode(val);\n    queryPart = queryPart + nextPart + '&';\n  });\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n\n//# sourceMappingURL=url.js.map"},"hash":"834cb66ba42493656bdba0f460ef7456"}