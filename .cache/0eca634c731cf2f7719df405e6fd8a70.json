{"dependencies":[{"name":"./implementation/args","loc":{"line":16,"column":22}},{"name":"./implementation/authwrapper","loc":{"line":17,"column":28}},{"name":"./implementation/location","loc":{"line":18,"column":25}},{"name":"./implementation/promise_external","loc":{"line":19,"column":32}},{"name":"./implementation/request","loc":{"line":20,"column":32}},{"name":"./reference","loc":{"line":21,"column":26}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServiceInternals = exports.Service = undefined;\n\nvar _args = require(\"./implementation/args\");\n\nvar args = _interopRequireWildcard(_args);\n\nvar _authwrapper = require(\"./implementation/authwrapper\");\n\nvar _location = require(\"./implementation/location\");\n\nvar _promise_external = require(\"./implementation/promise_external\");\n\nvar fbsPromiseImpl = _interopRequireWildcard(_promise_external);\n\nvar _request = require(\"./implementation/request\");\n\nvar RequestExports = _interopRequireWildcard(_request);\n\nvar _reference = require(\"./reference\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n *\n * @struct\n */\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Service = /** @class */function () {\n  function Service(app, pool, url) {\n    this.bucket_ = null;\n    function maker(authWrapper, loc) {\n      return new _reference.Reference(authWrapper, loc);\n    }\n    this.authWrapper_ = new _authwrapper.AuthWrapper(app, maker, RequestExports.makeRequest, this, pool);\n    this.app_ = app;\n    if (url != null) {\n      this.bucket_ = _location.Location.makeFromBucketSpec(url);\n    } else {\n      var authWrapperBucket = this.authWrapper_.bucket();\n      if (authWrapperBucket != null) {\n        this.bucket_ = new _location.Location(authWrapperBucket, '');\n      }\n    }\n    this.internals_ = new ServiceInternals(this);\n  }\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  Service.prototype.ref = function (path) {\n    function validator(path) {\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n    args.validate('ref', [args.stringSpec(validator, true)], arguments);\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n    var ref = new _reference.Reference(this.authWrapper_, this.bucket_);\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  };\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  Service.prototype.refFromURL = function (url) {\n    function validator(p) {\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n      try {\n        _location.Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n    args.validate('refFromURL', [args.stringSpec(validator, false)], arguments);\n    return new _reference.Reference(this.authWrapper_, url);\n  };\n  Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\n    get: function () {\n      return this.authWrapper_.maxUploadRetryTime();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Service.prototype.setMaxUploadRetryTime = function (time) {\n    args.validate('setMaxUploadRetryTime', [args.nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxUploadRetryTime(time);\n  };\n  Object.defineProperty(Service.prototype, \"maxOperationRetryTime\", {\n    get: function () {\n      return this.authWrapper_.maxOperationRetryTime();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Service.prototype.setMaxOperationRetryTime = function (time) {\n    args.validate('setMaxOperationRetryTime', [args.nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxOperationRetryTime(time);\n  };\n  Object.defineProperty(Service.prototype, \"app\", {\n    get: function () {\n      return this.app_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Service.prototype, \"INTERNAL\", {\n    get: function () {\n      return this.internals_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Service;\n}();\nexports.Service = Service;\n/**\n * @struct\n */\n\nvar ServiceInternals = /** @class */function () {\n  function ServiceInternals(service) {\n    this.service_ = service;\n  }\n  /**\n   * Called when the associated app is deleted.\n   * @see {!fbs.AuthWrapper.prototype.deleteApp}\n   */\n  ServiceInternals.prototype.delete = function () {\n    this.service_.authWrapper_.deleteApp();\n    return fbsPromiseImpl.resolve(undefined);\n  };\n  return ServiceInternals;\n}();\nexports.ServiceInternals = ServiceInternals;\n\n//# sourceMappingURL=service.js.map"},"hash":"0e7baeb58c43c384d6e2f54d6818eada"}